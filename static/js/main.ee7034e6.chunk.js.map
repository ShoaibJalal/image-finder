{"version":3,"sources":["components/navbar/NavBar.js","components/image-results/ImageResults.js","components/search/Search.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","root","flexGrow","grow","menuButton","marginLeft","marginRight","props","classes","react_default","a","createElement","className","AppBar_default","position","Toolbar_default","IconButton_default","color","aria-label","Menu_default","Typography_default","variant","Button_default","ImageResults","state","open","currentImg","handleOpen","img","_this","setState","handleClose","imageListContent","_this2","this","images","GridList_default","cols","map","GridListTile_default","key","id","src","largeImageURL","alt","tags","GridListTileBar_default","title","subtitle","user","actionIcon","onClick","style","ZoomIn_default","Dialog_default","modal","onClose","width","Close_default","Component","Search","searchImage","amount","apiURL","apiKey","textChangeHanlder","e","val","target","value","Object","defineProperty","axios","get","concat","then","res","data","hits","catch","err","alert","amountChangeHandler","name","console","log","TextField_default","label","onChange","fullWidth","Select_default","inputProps","MenuItem_default","length","image_results_ImageResults","theme","createMuiTheme","palette","primary","indigo","secondary","main","App","styles","navbar_NavBar","search_Search","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ee7034e6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  grow: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20\r\n  }\r\n};\r\n\r\nconst NavBar = props => {\r\n  const { classes } = props;\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"Menu\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n            Image Finder\r\n          </Typography>\r\n          <Button color=\"inherit\">Login</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nNavBar.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(NavBar);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\r\nimport ZoomIn from \"@material-ui/icons/ZoomIn\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nclass ImageResults extends Component {\r\n  state = {\r\n    open: false,\r\n    currentImg: \"\"\r\n  };\r\n\r\n  handleOpen = img => {\r\n    this.setState({ open: true, currentImg: img });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  render() {\r\n    let imageListContent;\r\n    const { images } = this.props;\r\n\r\n    if (images) {\r\n      imageListContent = (\r\n        <GridList cols={3}>\r\n          {images.map(img => (\r\n            <GridListTile key={img.id}>\r\n              <img src={img.largeImageURL} alt={img.tags} />\r\n\r\n              <GridListTileBar\r\n                title={img.tags}\r\n                subtitle={\r\n                  <span>\r\n                    by <strong>{img.user}</strong>\r\n                  </span>\r\n                }\r\n                actionIcon={\r\n                  <IconButton\r\n                    onClick={() => this.handleOpen(img.largeImageURL)}\r\n                    style={{ color: \"rgba(255, 255, 255, 0.54)\" }}\r\n                  >\r\n                    <ZoomIn />\r\n                  </IconButton>\r\n                }\r\n              />\r\n            </GridListTile>\r\n          ))}\r\n        </GridList>\r\n      );\r\n    } else {\r\n      imageListContent = null;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {imageListContent}\r\n        <Dialog modal={false} open={this.state.open} onClose={this.handleClose}>\r\n          <img src={this.state.currentImg} alt=\"\" style={{ width: \"100%\" }} />\r\n          <IconButton\r\n            color=\"inherit\"\r\n            onClick={this.handleClose}\r\n            aria-label=\"Close\"\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nImageResults.propTypes = {\r\n  images: PropTypes.array.isRequired\r\n};\r\nexport default ImageResults;\r\n","import React, { Component } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport axios from \"axios\";\r\nimport ImageResults from \"../image-results/ImageResults\";\r\n\r\nclass Search extends Component {\r\n  state = {\r\n    searchImage: \"\",\r\n    amount: 5,\r\n    apiURL: \"https://pixabay.com/api/\",\r\n    apiKey: \"10889030-18bc9bf747d9f7a7b951849c7\",\r\n    images: []\r\n  };\r\n\r\n  textChangeHanlder = e => {\r\n    const val = e.target.value;\r\n    this.setState({ [e.target.id]: val }, () => {\r\n      if (val === \"\") {\r\n        this.setState({ images: [] });\r\n      } else {\r\n        axios\r\n          .get(\r\n            `${this.state.apiURL}/?key=${this.state.apiKey}&q=${\r\n              this.state.searchImage\r\n            }&image_type=photo&per_page=${this.state.amount}&safesearch=true`\r\n          )\r\n          .then(res => this.setState({ images: res.data.hits }))\r\n          .catch(err => alert(\"Couldn't get data from the api. Sorry!\"));\r\n      }\r\n    });\r\n  };\r\n\r\n  amountChangeHandler = e => this.setState({ [e.target.name]: e.target.value });\r\n  render() {\r\n    console.log(this.state.images);\r\n    return (\r\n      <div>\r\n        <TextField\r\n          id=\"searchImage\"\r\n          label=\"Search for images\"\r\n          value={this.state.searchImage}\r\n          onChange={this.textChangeHanlder}\r\n          fullWidth={true}\r\n        />\r\n        <br />\r\n        <Select\r\n          value={this.state.amount}\r\n          onChange={this.amountChangeHandler}\r\n          inputProps={{\r\n            name: \"amount\",\r\n            id: \"amount\"\r\n          }}\r\n        >\r\n          <MenuItem value={5}>\r\n            <em>Five</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n        <br />\r\n        {this.state.images.length > 0 ? (\r\n          <ImageResults images={this.state.images} />\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Search;\r\n","import React, { Component } from \"react\";\nimport NavBar from \"./components/navbar/NavBar\";\nimport Search from \"./components/search/Search\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport indigo from \"@material-ui/core/colors/indigo\";\nimport \"./App.css\";\nconst theme = createMuiTheme({\n  palette: {\n    primary: indigo, // Purple and green play nicely together.\n    secondary: { main: \"#11cb5f\" } // This is just green.A700 as hex.\n  }\n});\nclass App extends Component {\n  render() {\n    return (\n      <MuiThemeProvider theme={theme}>\n        <div>\n          <NavBar />\n          <Search />\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}